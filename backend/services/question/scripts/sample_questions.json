[
  {
    "title": "Reverse a String",
    "category": ["Strings", "Algorithms"],
    "complexity": 0,
    "description": "Random1"
  },
  {
    "title": "Linked List Cycle Detection",
    "category": ["Data Structures", "Algorithms"],
    "complexity": 0,
    "description": "Random2"
  },
  {
    "title": "Roman to Integer",
    "category": ["Algorithms"],
    "complexity": 0,
    "description": "Random3"
  },
  {
    "title": "Add Binary",
    "category": ["Bit Manipulation", "Algorithms"],
    "complexity": 0,
    "description": "Random4"
  },
  {
    "title": "Fibonacci Number",
    "category": ["Recursion", "Algorithms"],
    "complexity": 0,
    "description": "Random5"
  },
  {
    "title": "Implement Stack using Queues",
    "category": ["Data Structures"],
    "complexity": 0,
    "description": "Random6"
  },
  {
    "title": "Combine Two Tables",
    "category": ["Databases"],
    "complexity": 0,
    "description": "Random7"
  },
  {
    "title": "Repeated DNA Sequences",
    "category": ["Algorithms", "Bit Manipulation"],
    "complexity": 1,
    "description": "Random8"
  },
  {
    "title": "Course Schedule",
    "category": ["Data Structures", "Algorithms"],
    "complexity": 1,
    "description": "Random9"
  },
  {
    "title": "LRU Cache Design",
    "category": ["Data Structures"],
    "complexity": 1,
    "description": "Random10"
  },
  {
    "title": "Longest Common Subsequence",
    "category": ["Strings", "Algorithms"],
    "complexity": 1,
    "description": "Random11"
  },
  {
    "title": "Rotate Image",
    "category": ["Arrays", "Algorithms"],
    "complexity": 1,
    "description": "Random12"
  },
  {
    "title": "Airplane Seat Assignment Probability",
    "category": ["Probability", "Brainteaser"],
    "complexity": 1,
    "description": "Random13"
  },
  {
    "title": "Validate Binary Search Tree",
    "category": ["Data Structures", "Algorithms"],
    "complexity": 1,
    "description": "Random14"
  },
  {
    "title": "Sliding Window Maximum",
    "category": ["Arrays", "Algorithms"],
    "complexity": 2,
    "description": "Random15"
  },
  {
    "title": "N-Queen Problem",
    "category": ["Algorithms"],
    "complexity": 2,
    "description": "Random16"
  },
  {
    "title": "Serialize and Deserialize a Binary Tree",
    "category": ["Data Structures", "Algorithms"],
    "complexity": 2,
    "description": "Random17"
  },
  {
    "title": "Wildcard Matching",
    "category": ["Strings", "Algorithms"],
    "complexity": 2,
    "description": "Random18"
  },
  {
    "title": "Chalkboard XOR Game",
    "category": ["Brainteaser", "Hard"],
    "complexity": 2,
    "description": "Random19"
  },
  {
    "title": "Trips and Users",
    "category": ["Databases", "Hard"],
    "complexity": 2,
    "description": "Random20"
  }
]
